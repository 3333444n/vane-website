---
import type { CollectionEntry } from "astro:content";

interface Props {
  event: {
    date: string;
    title: string;
    imageUrl: string;
    linkUrl: string;
  };
  size: "small" | "large" | "featured";
}

const { event, size } = Astro.props;
const { title, date, imageUrl, linkUrl } = event;

// Format the date
const formattedDate = new Date(date).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

let sizeClasses = "";
let titleSizeClasses = "text-lg";
let dateSizeClasses = "text-sm";

switch (size) {
  case "small":
    sizeClasses = "h-40 min-h-[160px]";
    break;
  case "large":
    sizeClasses = "h-60 min-h-[240px] md:col-span-2";
    titleSizeClasses = "text-lg md:text-xl";
    dateSizeClasses = "text-sm md:text-base";
    break;
  case "featured":
    sizeClasses =
      "h-72 min-h-[288px] md:col-span-full md:h-96 lg:col-span-2 lg:row-span-2";
    titleSizeClasses = "text-xl md:text-2xl";
    dateSizeClasses = "text-base md:text-lg";
    break;
}
---

<a
  href={linkUrl}
  class={`block rounded-lg overflow-hidden shadow-md ${sizeClasses}`}
>
  <div
    class="relative bg-cover bg-center h-full"
    style={{ backgroundImage: `url('${imageUrl}')` }}
  >
    <div class="absolute inset-0 bg-black/40">
      <div class="flex flex-col justify-end p-4 h-full">
        <h2 class={`text-white font-semibold mb-2 ${titleSizeClasses}`}>
          {title}
        </h2>
        <p class={`text-white ${dateSizeClasses}`}>{date}</p>
      </div>
    </div>
  </div>
</a>
