---
import EventCard from "./EventCard.astro";
import type { ImageMetadata } from "astro";

interface Event {
  date: string;
  title: string;
  imageUrl: ImageMetadata | string;
  linkUrl: string;
  size?: "small" | "large" | "featured"; // Individual event can override default
}

interface Props {
  title: string;
  events: Event[];
  defaultCardSize: "small" | "large" | "featured"; // Allow featured as a default for a whole section
  useLightBackground?: boolean;
  id?: string; // Add id as an optional prop
}

const {
  title,
  events,
  defaultCardSize,
  useLightBackground = true,
  id, // Destructure id
} = Astro.props;
---

<section
  id={id}
  style={`scroll-margin-top: 75px;`}
  class:list={[
    "py-12", // Vertical padding for the section
    useLightBackground ? "bg-light" : "bg-light2", // Background for the full width
  ]}
>
  <div
    class:list={[
      "container",
      "mx-auto",
      "px-4", // Horizontal padding for the content
    ]}
  >
    <h2 class="text-3xl font-bold text-primary mb-8 text-center md:text-left">
      {title}
    </h2>
    <div
      class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-6"
    >
      {
        events.map((eventItem, index) => (
          <EventCard
            event={eventItem}
            size={eventItem.size || defaultCardSize}
            delay={index * 100}
          />
        ))
      }
    </div>
  </div>
</section>
