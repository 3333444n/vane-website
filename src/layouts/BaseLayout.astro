---
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import FooterCourse from "../components/FooterCourse.astro";
import "../styles/global.css";

interface Props {
  title?: string;
  description?: string;
  isCourseUnavailable?: boolean;
  hideNavigation?: boolean;
  hideFooter?: boolean;
}

const {
  title = "Your Website Title",
  description = "Your website description",
  isCourseUnavailable = false,
  hideNavigation = false,
  hideFooter = false,
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>{title}</title>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Afacad:ital,wght@0,400..700;1,400..700&family=DM+Serif+Text&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    {
      !hideNavigation && (
        <header>
          <Navigation />
        </header>
      )
    }
    <main class:list={[{ "pt-16": !hideNavigation }]}>
      <slot />
    </main>
    {!hideFooter && (isCourseUnavailable ? <FooterCourse /> : <Footer />)}
    <script>
      console.log(
        "BaseLayout.astro SCRIPT TAG EXECUTED (dynamic import test)."
      );

      // document.addEventListener("astro:page-load", () => {
      //   console.log(
      //     "Astro:page-load event fired! Attempting dynamic import..."
      //   );
      import("tailwindcss-intersect")
        .then(({ Observer }) => {
          console.log(
            "tailwindcss-intersect dynamically imported. Observer:",
            Observer
          );
          if (Observer && typeof Observer.start === "function") {
            Observer.start();
            console.log("tailwindcss-intersect Observer.start() called.");
          } else {
            console.error(
              "Observer or Observer.start is not available after dynamic import."
            );
          }
        })
        .catch((err) => {
          console.error(
            "Error during dynamic import of tailwindcss-intersect:",
            err
          );
        });
      // });
    </script>
  </body>
</html>
